name: Patch vulnerable images 
on: 
 workflow_dispatch: 
  inputs:
    image-ref:
      description: 'Image to scan and patch'
      required: false
      default: 'docker.io/php:7.4.3-apache'
    patched-image-ref:
      description: 'Image ref of patched image'
      required: false
      default: 'docker.io/php:7.4.3-apache-patched'
jobs: 
 patch: 
   runs-on: ubuntu-latest 
   # used for pushing patched image to GHCR 
   permissions: 
     contents: read 
     packages: write 
   steps: 
     # generate trivy report for fixable OS package vulnerabilities 
     - name: Generate Trivy Report 
       uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # 0.16.1 
       with: 
         scan-type: "image" 
         format: "json" 
         output: "report.json" 
         ignore-unfixed: true 
         vuln-type: "os" 
         image-ref: ${{ github.event.inputs.image-ref }} 

       # check whether there are any OS package vulnerabilities 
     - name: Check vulnerability count 
       id: vuln_count 
       run: | 
         report_file="report.json" 
         vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file") 
         echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT 

       # copa action will only run if there are vulnerabilities 
     - name: Run Copa action 
       if: steps.vuln_count.outputs.vuln_count != '0' 
       id: copa 
       # using main for testing purposes 
       # use a tag (such as v1 or v1.0.1) at a bare minimum 
       # recommendation is to pin to a digest for security and stability 
       # and rely on dependabot for digest/version updates 
       uses: project-copacetic/copa-action@main 
       with: 
         image: ${{ github.event.inputs.image-ref }}
         image-report: "report.json" 
         patched-tag: "patched" 

     - name: Retag patched image 
       if: steps.copa.conclusion == 'success' 
       run: | 
         docker tag ${{ steps.copa.outputs.patched-image }} ${{ github.event.inputs.patched-image-ref }}


     - name: Generate Trivy Report On Patched Image
       if: steps.copa.conclusion == 'success' 
       uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # 0.16.1 
       with: 
         scan-type: "image" 
         format: "json" 
         output: "report2.json" 
         ignore-unfixed: true 
         vuln-type: "os" 
         image-ref: ${{ github.event.inputs.patched-image-ref }} 
         
       # check whether there are any OS package vulnerabilities 
     - name: Check vulnerability count of patched image versus unpatched image
       id: vuln_count2
       run: | 
         report_file="report.json" 
         vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file") 
         echo "vuln_count=$vuln_count"

         report_file="report2.json" 
         vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file") 
         echo "vuln_count_patched=$vuln_count"
